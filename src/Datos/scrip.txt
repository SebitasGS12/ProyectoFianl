
create database bd_gci;
use bd_gci;

 CREATE TABLE `persona` (
   `Dni_Persona` int(11) NOT NULL,
   `nombrePersona` varchar(40) DEFAULT NULL,
   `apellidosPersona` varchar(40) DEFAULT NULL,
   `correo` varchar(80) DEFAULT NULL,
   `edad` int(11) DEFAULT NULL,
	`contraseña` varchar(40) ,
   PRIMARY KEY (`Dni_Persona`)
 );

CREATE TABLE `admin` (
   `ID_admin` varchar(5) NOT NULL,
   `dni_admin` int(11) NOT NULL,
   PRIMARY KEY (`ID_admin`),
   KEY `FK_DNI` (`dni_admin`),
   CONSTRAINT `FK_DNI` FOREIGN KEY (`dni_admin`) REFERENCES `persona` (`Dni_Persona`)
 ); 
 

CREATE TABLE `empleado` (
   `ID_Emp` varchar(3) NOT NULL,
   `Puesto` varchar(3) DEFAULT NULL,
   `DNI_Emp` int(11) NOT NULL,
   PRIMARY KEY (`ID_Emp`),
   KEY `FK_DNI_Emp` (`DNI_Emp`),
   CONSTRAINT `FK_DNI_Emp` FOREIGN KEY (`DNI_Emp`) REFERENCES `persona` (`Dni_Persona`)
 ); 


CREATE TABLE `productos` (
   `ID_pro` int(11) NOT NULL,
   `nombre` varchar(45) NOT NULL,
   `precioU` double NOT NULL,
   `detalle` varchar(45) DEFAULT NULL,
   PRIMARY KEY (`ID_pro`)
 ) ;
 
 
 CREATE TABLE `producto_empleado` (
   `ID_Pro_Emp` int(11) NOT NULL,
   `ID_Emp` varchar(3) DEFAULT NULL,
   `ID_pro` int(11) DEFAULT NULL,
   `stock` int(11) DEFAULT NULL,
   PRIMARY KEY (`ID_Pro_Emp`),
   KEY `FK_ID_Emp` (`ID_Emp`),
   KEY `FK_ID_Pro` (`ID_pro`),
   CONSTRAINT `FK_ID_Emp` FOREIGN KEY (`ID_Emp`) REFERENCES `empleado` (`ID_Emp`),
   CONSTRAINT `FK_ID_Pro` FOREIGN KEY (`ID_pro`) REFERENCES `productos` (`ID_pro`)
 ) ;



 
  
 CREATE TABLE `orden` (
   `ID_Orden` varchar(15) NOT NULL,
   `cantidad` int(11) DEFAULT NULL,
   `peso` double DEFAULT NULL,
   `ID_Pro_Emp` int(11) NOT NULL,
   `ID_Emp` varchar(3) DEFAULT NULL,
   `subTotal` double NOT NULL,
   PRIMARY KEY (`ID_Orden`),
   KEY `FK_ID_Emp_orden` (`ID_Emp`),
   KEY `FK_ID_Pro_Emp_orden` (`ID_Pro_Emp`),
   CONSTRAINT `FK_ID_Pro_Emp_orden` FOREIGN KEY (`ID_Pro_Emp`) REFERENCES `producto_empleado` (`ID_Pro_Emp`),
   CONSTRAINT `FK_ID_Emp_orden` FOREIGN KEY (`ID_Emp`) REFERENCES `empleado` (`ID_Emp`)
 ) ;
 
 
 
 CREATE TABLE `venta` (
   `ID_venta` varchar(20) NOT NULL,
   `ID_Orden` varchar(15) DEFAULT NULL,
   `precioTotal` double(6,2) DEFAULT NULL,
   PRIMARY KEY (`ID_venta`),
   KEY `FK_ID_Orden` (`ID_Orden`),
   CONSTRAINT `FK_ID_Orden` FOREIGN KEY (`ID_Orden`) REFERENCES `orden` (`ID_Orden`)
 ) ;
 

 
 insert into persona value (98342465,'Ricardo José','Huaman Urtiaga','iRicardoJo@ventas.com',34,'urtiaga92920');
 insert into persona value (73435810,'Carlos Alberto','Quispe Flores','Calros012@ventas.com',30,'quispevens2');/*admin*/
 insert into persona value (83729492,'Luis Enrique','Sanchez Garcia','eNriques12ls@ventas.com',29,'rnsi2323');
 insert into persona value (93849572,'Cristhian Alex','Rodriguez Rojas','CrishtanRoka01@ventas.com',31,'crisk139');
 insert into persona value (27273929,'Ruth Dulcina','Vasquez Mamani','ManesDucin_12@ventas.com',33,'x993maneusrut');/*admin*/
 insert into persona value (30132941,'Manuel José','Lopez Ramos','ManoLope_12@ventas.com',35,'iaiamaros131');
 insert into persona value (94727222,'Jorge Angel','Perez Torres','nangel_112ro@ventas.com',30,'jorhd2e0302');
 insert into persona value (78472902,'Ricardo Agusto','Diaz Gonzales','rics031_d@ventas.com',32,'ricasrfo2002');
 insert into persona value (84729393,'Carolina Alfonsina','Ramirez Mendoza','carol_13as@ventas.com',31,'anfosne2202442');
 insert into persona value (39300282,'Julianna Carmen','Chavez Espinoza','jualina-232@ventas.com',40,'0402chabvecarm0');



 insert into admin value ('00001',73435810);
 insert into admin value ('00002',27273929);


 insert into empleado value ('111','C31',98342465);
 insert into empleado value ('112','A22',83729492);
 insert into empleado value ('113','B03',93849572);
 insert into empleado value ('114','D42',30132941);
 insert into empleado value ('115','F25',94727222);
 insert into empleado value ('116','B16',78472902);
 insert into empleado value ('117','C07',84729393);
 insert into empleado value ('118','A13',39300282);

select *  from productos;

insert productos values (1011,'arroz San Cristobal',6.00,'kilogramo'),
(1012,'camote de Ayacucho',3.00,'kilogramo'),
(1013,'papa de la Sierra',2.00,'Kilogramo'),
(1014,'cebolla de la Selva',4.00,'kilogramo'),
(1015,'choclo de Apurimac',1.00,'unidad'),
(1016,'Aceite cocinero',12.00,'unidad'),
(1017,'yuca de San Antonio',7.00,'kilogramo'),
(1018,'atún puramar',5.00,'unidad'),
(1019,'maiz de Chiclayo',2.00,'kilogramo'),
(1020,'quinua de Olmeiro',9.00,'kilogramo'),
(1021,'mantequilla dulcina',6.00,'unidad'),
(1022,'lenteja de la Sierra',3.00,'kilogramo'),
(1023,'azucar de Altomayo',6.00,'kilogramo'),
(1024,'Leche de tarro VIDA',4.00,'unidad'),
(1025,'frejol del Norte',4.00,'kilogramo');




 
/**PROCEDIMIENTOS DE BD ************/


/*******Procedimientos Producto_Empleado*******/

drop procedure if exists ListarProducto_Empleado;

delimiter @@
create procedure ListarProducto_Empleado()
begin
	
	select *
    from producto_empleado ;

end @@
delimiter ;

-- call ListarProducto_Empleado();

drop procedure if exists BuscarProducto_Empleado;

delimiter @@
create procedure BuscarProducto_Empleado(idproemp int(11))
begin
	
	select * from productos where id_pro = codpro;

end @@
delimiter ;

-- call BuscarProducto("1012");



/*******Procedimientos Productos*******/


drop procedure if exists ListarProducto;

delimiter @@
create procedure ListarProducto()
begin
	
	select *
    from productos ;

end @@
delimiter ;

-- call ListarProducto();


drop procedure if exists BuscarProducto;

delimiter @@
create procedure BuscarProducto(codpro int(11))
begin
	
	select * from productos where id_pro = codpro;

end @@
delimiter ;

-- call BuscarProducto("1012");

drop procedure if exists InsertarProducto;

delimiter @@
create procedure InsertarProducto(idpro int(11), nompro varchar(45), prepro double,det varchar(45))
begin
	
	insert productos values (idpro,nompro,prepro, det );

end @@
delimiter ;

-- call InsertarProducto();




drop procedure if exists ModificarProducto;

delimiter @@
create procedure ModificarProducto(idprox int(11), nomprox varchar(45), preprox double,detx varchar(45))
begin
	
	update productos set nombre = nomprox, precioU = preprox , detalle = detx
    where ID_pro = idprox ;

end @@
delimiter ;

-- call ModificarProducto();

drop procedure if exists EliminarProducto;

delimiter @@
create procedure EliminarProducto(idprodx int(11))
begin
	
	delete from productos where ID_pro = idprodx;

end @@
delimiter ;

-- call EliminarProducto();
















-- Procedimeientos Vendedores -- ListarVendedores
drop procedure if exists ListarVendedores;

delimiter @@
create procedure ListarVendedores()
begin
	
	select *
    from empleado ;

end @@
delimiter ;

-- call ListarVendedores();


-- Procedimeientos Vendedores -- BuscarVendedores
drop procedure if exists BuscarVendedoresID;

delimiter @@
create procedure BuscarVendedoresID(codigo varchar(3))
begin
	
	select * from empleado where ID_Emp = codigo;

end @@
delimiter ;

-- call BuscarVendedoresID("111");

-- Procedimeientos Vendedores -- BuscarVendedoresDNI
drop procedure if exists BuscarVendedoresDNI;

delimiter @@
create procedure BuscarVendedoresDNI(xdni int)
begin
	
	select *  from empleado where DNI_Emp = xdni ;

end @@
delimiter ;

-- call BuscarVendedoresDNI(98342465);

-- Procedimeientos Vendedores -- InsertarVendedores

drop procedure if exists InsertarVendedores;

delimiter @@
create procedure InsertarVendedores(id varchar(3), puest varchar(3),dni int(11))
begin
	
	insert empleado values (id,puest,dni);

end @@
delimiter ;

-- call InsertarVendedores();

-- Procedimeientos Vendedores -- ModificarVendedores

drop procedure if exists ModificarVendedores;

delimiter @@
create procedure ModificarVendedores(xid varchar(3), xpuest varchar(3),xdniEmp int(11))
begin
	
	update empleado set Puesto = xpuest, DNI_Emp = xdniEmp 
    where ID_Emp = xid ;

end @@
delimiter ;

-- call ModificarVendedores();

-- Procedimeientos Vendedores -- EliminarVendedores

drop procedure if exists EliminarVendedores;

delimiter @@
create procedure EliminarVendedores(codi varchar(3))
begin
	
	delete from empleado where ID_Emp = codi;

end @@
delimiter ;

-- call EliminarVendedores();




/**Procedimientos Persona**/

-- Procedimeientos Persona -- ListarPersona
drop procedure if exists ListarPersona;

delimiter @@
create procedure ListarPersona()
begin
	
	select * from persona;

end @@
delimiter ;

-- call ListarPersona();

-- Procedimeientos Persona -- BuscarPersonaDNI
drop procedure if exists BuscarPersonaDNI;

delimiter @@
create procedure BuscarPersonaDNI(dniPersona int(11))
begin
	
	select * from persona where Dni_persona = dniPersona;

end @@
delimiter ;

-- call BuscarPersonaDNI("98342465");

 -- Procedimeientos Persona -- InsertarPersona

drop procedure if exists InsertarPersona;

delimiter @@
create procedure InsertarPersona( xdnipersona int(11),xnopersona varchar(40) ,xappersona varchar(40),xcorreo varchar(30), xedad int,xcontraseña varchar(40))
begin
	
	insert persona values (xdnipersona,xnopersona,xappersona,xcorreo,xedad,xcontraseña);

end @@
delimiter ;

-- call InsertarPersona();

-- Procedimeientos Persona -- ModificarPersona
drop procedure if exists ModificarPersona

delimiter @@
create procedure ModificarPersona( xdniper int(11),xnoper varchar(40) ,xapper varchar(40),xcorr varchar(30), xed int,xcontra varchar(40))
begin
	/*Aca se realiza el procedimiento*/
    
    update persona set nombrePersona = xnoper , apellidosPersona = xapper , correo = xcorr , edad =  xed , contraseña = xcontra
	where Dni_Persona = xdniper;
end @@
delimiter ; -- Por sintaxis deja un espacio

-- call ModificarPersona();

-- Procedimeientos Persona - EliminarPersona
drop procedure if exists EliminarPersona
delimiter @@

create procedure EliminarPersona(dniper int(11))

begin
	/*Aca se realiza el procedimiento*/
    
    delete from persona
    where Dni_Persona = dniper;
    
end @@
delimiter ; -- Por sintaxis deja un espacio

-- call EliminarPersona(74973136);




 
/**Procedimientos Admin**/
-- Procedimeientos Admin -- BuscarAdminDNI
drop procedure if exists BuscarAdminDNI;

delimiter @@
create procedure BuscarAdminDNI(dniadmin int(11))
begin
	
	select * from admin where dni_admin = dniadmin;

end @@
delimiter ;

-- call BuscarAdminDNI("98342465");











